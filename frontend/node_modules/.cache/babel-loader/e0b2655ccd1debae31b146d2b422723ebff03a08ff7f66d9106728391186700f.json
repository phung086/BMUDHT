{"ast":null,"code":"const alphabet=\"ABCDEFGHJKLMNPQRSTUVWXYZ23456789\";const hashSeed=seed=>{let hash=0;for(let i=0;i<seed.length;i+=1){hash=hash*33^seed.charCodeAt(i);}return hash>>>0;};const mixHash=(current,salt)=>{return hashSeed(\"\".concat(current,\"-\").concat(salt,\"-\").concat(current.length));};const buildEntropySeed=tx=>{const created=tx.createdAt?new Date(tx.createdAt).getTime():0;return[tx.id||\"id\",created||Date.now(),tx.amount||0,tx.type||\"tx\",tx.status||\"st\",tx.description||\"\"].join(\"|\");};export const getReferenceCode=tx=>{if(!tx)return\"REF-UNKNOWN\";if(tx.referenceCode)return tx.referenceCode;let seed=buildEntropySeed(tx);let hash=hashSeed(seed);let code=\"\";while(code.length<12){hash=mixHash(seed,\"\".concat(hash,\"-\").concat(code.length));const index=hash%alphabet.length;code+=alphabet[index];seed=\"\".concat(seed,\"-\").concat(index,\"-\").concat(code.length);}const segments=[code.slice(0,4),code.slice(4,8),code.slice(8,12)];const prefix=tx.type===\"deposit\"?\"IN\":tx.type===\"transfer\"?\"OUT\":\"TX\";return\"\".concat(prefix,\"-\").concat(segments.join(\"-\"));};export default getReferenceCode;","map":{"version":3,"names":["alphabet","hashSeed","seed","hash","i","length","charCodeAt","mixHash","current","salt","concat","buildEntropySeed","tx","created","createdAt","Date","getTime","id","now","amount","type","status","description","join","getReferenceCode","referenceCode","code","index","segments","slice","prefix"],"sources":["D:/BMUDHT/frontend/src/utils/reference.js"],"sourcesContent":["const alphabet = \"ABCDEFGHJKLMNPQRSTUVWXYZ23456789\";\r\n\r\nconst hashSeed = (seed) => {\r\n  let hash = 0;\r\n  for (let i = 0; i < seed.length; i += 1) {\r\n    hash = (hash * 33) ^ seed.charCodeAt(i);\r\n  }\r\n  return hash >>> 0;\r\n};\r\n\r\nconst mixHash = (current, salt) => {\r\n  return hashSeed(`${current}-${salt}-${current.length}`);\r\n};\r\n\r\nconst buildEntropySeed = (tx) => {\r\n  const created = tx.createdAt ? new Date(tx.createdAt).getTime() : 0;\r\n  return [\r\n    tx.id || \"id\",\r\n    created || Date.now(),\r\n    tx.amount || 0,\r\n    tx.type || \"tx\",\r\n    tx.status || \"st\",\r\n    tx.description || \"\",\r\n  ].join(\"|\");\r\n};\r\n\r\nexport const getReferenceCode = (tx) => {\r\n  if (!tx) return \"REF-UNKNOWN\";\r\n  if (tx.referenceCode) return tx.referenceCode;\r\n  let seed = buildEntropySeed(tx);\r\n  let hash = hashSeed(seed);\r\n  let code = \"\";\r\n  while (code.length < 12) {\r\n    hash = mixHash(seed, `${hash}-${code.length}`);\r\n    const index = hash % alphabet.length;\r\n    code += alphabet[index];\r\n    seed = `${seed}-${index}-${code.length}`;\r\n  }\r\n  const segments = [code.slice(0, 4), code.slice(4, 8), code.slice(8, 12)];\r\n  const prefix =\r\n    tx.type === \"deposit\" ? \"IN\" : tx.type === \"transfer\" ? \"OUT\" : \"TX\";\r\n  return `${prefix}-${segments.join(\"-\")}`;\r\n};\r\n\r\nexport default getReferenceCode;\r\n"],"mappings":"AAAA,KAAM,CAAAA,QAAQ,CAAG,kCAAkC,CAEnD,KAAM,CAAAC,QAAQ,CAAIC,IAAI,EAAK,CACzB,GAAI,CAAAC,IAAI,CAAG,CAAC,CACZ,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGF,IAAI,CAACG,MAAM,CAAED,CAAC,EAAI,CAAC,CAAE,CACvCD,IAAI,CAAIA,IAAI,CAAG,EAAE,CAAID,IAAI,CAACI,UAAU,CAACF,CAAC,CAAC,CACzC,CACA,MAAO,CAAAD,IAAI,GAAK,CAAC,CACnB,CAAC,CAED,KAAM,CAAAI,OAAO,CAAGA,CAACC,OAAO,CAAEC,IAAI,GAAK,CACjC,MAAO,CAAAR,QAAQ,IAAAS,MAAA,CAAIF,OAAO,MAAAE,MAAA,CAAID,IAAI,MAAAC,MAAA,CAAIF,OAAO,CAACH,MAAM,CAAE,CAAC,CACzD,CAAC,CAED,KAAM,CAAAM,gBAAgB,CAAIC,EAAE,EAAK,CAC/B,KAAM,CAAAC,OAAO,CAAGD,EAAE,CAACE,SAAS,CAAG,GAAI,CAAAC,IAAI,CAACH,EAAE,CAACE,SAAS,CAAC,CAACE,OAAO,CAAC,CAAC,CAAG,CAAC,CACnE,MAAO,CACLJ,EAAE,CAACK,EAAE,EAAI,IAAI,CACbJ,OAAO,EAAIE,IAAI,CAACG,GAAG,CAAC,CAAC,CACrBN,EAAE,CAACO,MAAM,EAAI,CAAC,CACdP,EAAE,CAACQ,IAAI,EAAI,IAAI,CACfR,EAAE,CAACS,MAAM,EAAI,IAAI,CACjBT,EAAE,CAACU,WAAW,EAAI,EAAE,CACrB,CAACC,IAAI,CAAC,GAAG,CAAC,CACb,CAAC,CAED,MAAO,MAAM,CAAAC,gBAAgB,CAAIZ,EAAE,EAAK,CACtC,GAAI,CAACA,EAAE,CAAE,MAAO,aAAa,CAC7B,GAAIA,EAAE,CAACa,aAAa,CAAE,MAAO,CAAAb,EAAE,CAACa,aAAa,CAC7C,GAAI,CAAAvB,IAAI,CAAGS,gBAAgB,CAACC,EAAE,CAAC,CAC/B,GAAI,CAAAT,IAAI,CAAGF,QAAQ,CAACC,IAAI,CAAC,CACzB,GAAI,CAAAwB,IAAI,CAAG,EAAE,CACb,MAAOA,IAAI,CAACrB,MAAM,CAAG,EAAE,CAAE,CACvBF,IAAI,CAAGI,OAAO,CAACL,IAAI,IAAAQ,MAAA,CAAKP,IAAI,MAAAO,MAAA,CAAIgB,IAAI,CAACrB,MAAM,CAAE,CAAC,CAC9C,KAAM,CAAAsB,KAAK,CAAGxB,IAAI,CAAGH,QAAQ,CAACK,MAAM,CACpCqB,IAAI,EAAI1B,QAAQ,CAAC2B,KAAK,CAAC,CACvBzB,IAAI,IAAAQ,MAAA,CAAMR,IAAI,MAAAQ,MAAA,CAAIiB,KAAK,MAAAjB,MAAA,CAAIgB,IAAI,CAACrB,MAAM,CAAE,CAC1C,CACA,KAAM,CAAAuB,QAAQ,CAAG,CAACF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAEH,IAAI,CAACG,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAEH,IAAI,CAACG,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAAC,CACxE,KAAM,CAAAC,MAAM,CACVlB,EAAE,CAACQ,IAAI,GAAK,SAAS,CAAG,IAAI,CAAGR,EAAE,CAACQ,IAAI,GAAK,UAAU,CAAG,KAAK,CAAG,IAAI,CACtE,SAAAV,MAAA,CAAUoB,MAAM,MAAApB,MAAA,CAAIkB,QAAQ,CAACL,IAAI,CAAC,GAAG,CAAC,EACxC,CAAC,CAED,cAAe,CAAAC,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}