{"ast":null,"code":"import _objectSpread from\"D:/BMUDHT/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useCallback,useEffect,useMemo,useState}from\"react\";import api from\"../services/api\";import{getReferenceCode}from\"../utils/reference\";import{jsx as _jsx}from\"react/jsx-runtime\";const NotificationContext=/*#__PURE__*/createContext({notifications:[],unreadCount:0,refresh:()=>Promise.resolve(),markAllAsRead:()=>{},markAsRead:()=>{}});const STORAGE_KEY=\"notification.read\";const loadReadState=()=>{try{const raw=localStorage.getItem(STORAGE_KEY);if(!raw)return{};return JSON.parse(raw);}catch(e){return{};}};const saveReadState=map=>{try{localStorage.setItem(STORAGE_KEY,JSON.stringify(map));}catch(e){}};const buildNotificationFromTransaction=tx=>{const verb=tx.type===\"deposit\"?\"Nạp\":tx.type===\"transfer\"?\"Chuyển\":\"Giao dịch\";const actor=tx.type===\"deposit\"?\"vào tài khoản\":tx.type===\"transfer\"?\"\\u0111\\u1EBFn \".concat(tx.toUsername):tx.description||\"\";const title=tx.type===\"deposit\"?\"Nạp tiền thành công\":tx.type===\"transfer\"?\"Chuyển khoản thành công\":\"Giao dịch\";const decoratedTx=_objectSpread(_objectSpread({},tx),{},{reference:getReferenceCode(tx)});const direction=tx.type===\"deposit\"?1:-1;return{id:String(tx.id),title,description:decoratedTx.description||\"\".concat(verb,\" \").concat(actor).trim(),amount:direction*Number(decoratedTx.amount||0),status:decoratedTx.status,createdAt:decoratedTx.createdAt,reference:decoratedTx.reference,raw:decoratedTx};};export const NotificationProvider=_ref=>{let{children}=_ref;const[notifications,setNotifications]=useState([]);const[readMap,setReadMap]=useState(()=>loadReadState());const[loading,setLoading]=useState(false);const fetchNotifications=useCallback(async()=>{setLoading(true);try{var _res$data;const res=await api.get(\"/api/transactions/history\");const items=(((_res$data=res.data)===null||_res$data===void 0?void 0:_res$data.transactions)||[]).map(buildNotificationFromTransaction);setNotifications(items.sort((a,b)=>new Date(b.createdAt)-new Date(a.createdAt)));return items;}catch(e){return[];}finally{setLoading(false);}},[]);useEffect(()=>{fetchNotifications();},[fetchNotifications]);useEffect(()=>{saveReadState(readMap);},[readMap]);const markAllAsRead=useCallback(()=>{const next=notifications.reduce((acc,item)=>{acc[item.id]=true;return acc;},{});setReadMap(next);},[notifications]);const markAsRead=useCallback(id=>{setReadMap(curr=>_objectSpread(_objectSpread({},curr),{},{[id]:true}));},[]);const refresh=useCallback(async()=>{const items=await fetchNotifications();setNotifications(items);return items;},[fetchNotifications]);const value=useMemo(()=>{const unreadCount=notifications.reduce((count,item)=>{return readMap[item.id]?count:count+1;},0);return{notifications,unreadCount,loading,refresh,markAllAsRead,markAsRead,readMap};},[notifications,readMap,refresh,markAllAsRead,markAsRead,loading]);return/*#__PURE__*/_jsx(NotificationContext.Provider,{value:value,children:children});};export default NotificationContext;","map":{"version":3,"names":["React","createContext","useCallback","useEffect","useMemo","useState","api","getReferenceCode","jsx","_jsx","NotificationContext","notifications","unreadCount","refresh","Promise","resolve","markAllAsRead","markAsRead","STORAGE_KEY","loadReadState","raw","localStorage","getItem","JSON","parse","e","saveReadState","map","setItem","stringify","buildNotificationFromTransaction","tx","verb","type","actor","concat","toUsername","description","title","decoratedTx","_objectSpread","reference","direction","id","String","trim","amount","Number","status","createdAt","NotificationProvider","_ref","children","setNotifications","readMap","setReadMap","loading","setLoading","fetchNotifications","_res$data","res","get","items","data","transactions","sort","a","b","Date","next","reduce","acc","item","curr","value","count","Provider"],"sources":["D:/BMUDHT/frontend/src/context/NotificationContext.js"],"sourcesContent":["import React, {\r\n  createContext,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from \"react\";\r\nimport api from \"../services/api\";\r\nimport { getReferenceCode } from \"../utils/reference\";\r\n\r\nconst NotificationContext = createContext({\r\n  notifications: [],\r\n  unreadCount: 0,\r\n  refresh: () => Promise.resolve(),\r\n  markAllAsRead: () => {},\r\n  markAsRead: () => {},\r\n});\r\n\r\nconst STORAGE_KEY = \"notification.read\";\r\n\r\nconst loadReadState = () => {\r\n  try {\r\n    const raw = localStorage.getItem(STORAGE_KEY);\r\n    if (!raw) return {};\r\n    return JSON.parse(raw);\r\n  } catch (e) {\r\n    return {};\r\n  }\r\n};\r\n\r\nconst saveReadState = (map) => {\r\n  try {\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(map));\r\n  } catch (e) {}\r\n};\r\n\r\nconst buildNotificationFromTransaction = (tx) => {\r\n  const verb =\r\n    tx.type === \"deposit\"\r\n      ? \"Nạp\"\r\n      : tx.type === \"transfer\"\r\n      ? \"Chuyển\"\r\n      : \"Giao dịch\";\r\n  const actor =\r\n    tx.type === \"deposit\"\r\n      ? \"vào tài khoản\"\r\n      : tx.type === \"transfer\"\r\n      ? `đến ${tx.toUsername}`\r\n      : tx.description || \"\";\r\n  const title =\r\n    tx.type === \"deposit\"\r\n      ? \"Nạp tiền thành công\"\r\n      : tx.type === \"transfer\"\r\n      ? \"Chuyển khoản thành công\"\r\n      : \"Giao dịch\";\r\n  const decoratedTx = { ...tx, reference: getReferenceCode(tx) };\r\n  const direction = tx.type === \"deposit\" ? 1 : -1;\r\n  return {\r\n    id: String(tx.id),\r\n    title,\r\n    description: decoratedTx.description || `${verb} ${actor}`.trim(),\r\n    amount: direction * Number(decoratedTx.amount || 0),\r\n    status: decoratedTx.status,\r\n    createdAt: decoratedTx.createdAt,\r\n    reference: decoratedTx.reference,\r\n    raw: decoratedTx,\r\n  };\r\n};\r\n\r\nexport const NotificationProvider = ({ children }) => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [readMap, setReadMap] = useState(() => loadReadState());\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchNotifications = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await api.get(\"/api/transactions/history\");\r\n      const items = (res.data?.transactions || []).map(\r\n        buildNotificationFromTransaction\r\n      );\r\n      setNotifications(\r\n        items.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\r\n      );\r\n      return items;\r\n    } catch (e) {\r\n      return [];\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchNotifications();\r\n  }, [fetchNotifications]);\r\n\r\n  useEffect(() => {\r\n    saveReadState(readMap);\r\n  }, [readMap]);\r\n\r\n  const markAllAsRead = useCallback(() => {\r\n    const next = notifications.reduce((acc, item) => {\r\n      acc[item.id] = true;\r\n      return acc;\r\n    }, {});\r\n    setReadMap(next);\r\n  }, [notifications]);\r\n\r\n  const markAsRead = useCallback((id) => {\r\n    setReadMap((curr) => ({ ...curr, [id]: true }));\r\n  }, []);\r\n\r\n  const refresh = useCallback(async () => {\r\n    const items = await fetchNotifications();\r\n    setNotifications(items);\r\n    return items;\r\n  }, [fetchNotifications]);\r\n\r\n  const value = useMemo(() => {\r\n    const unreadCount = notifications.reduce((count, item) => {\r\n      return readMap[item.id] ? count : count + 1;\r\n    }, 0);\r\n    return {\r\n      notifications,\r\n      unreadCount,\r\n      loading,\r\n      refresh,\r\n      markAllAsRead,\r\n      markAsRead,\r\n      readMap,\r\n    };\r\n  }, [notifications, readMap, refresh, markAllAsRead, markAsRead, loading]);\r\n\r\n  return (\r\n    <NotificationContext.Provider value={value}>\r\n      {children}\r\n    </NotificationContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NotificationContext;\r\n"],"mappings":"uGAAA,MAAO,CAAAA,KAAK,EACVC,aAAa,CACbC,WAAW,CACXC,SAAS,CACTC,OAAO,CACPC,QAAQ,KACH,OAAO,CACd,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CACjC,OAASC,gBAAgB,KAAQ,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtD,KAAM,CAAAC,mBAAmB,cAAGT,aAAa,CAAC,CACxCU,aAAa,CAAE,EAAE,CACjBC,WAAW,CAAE,CAAC,CACdC,OAAO,CAAEA,CAAA,GAAMC,OAAO,CAACC,OAAO,CAAC,CAAC,CAChCC,aAAa,CAAEA,CAAA,GAAM,CAAC,CAAC,CACvBC,UAAU,CAAEA,CAAA,GAAM,CAAC,CACrB,CAAC,CAAC,CAEF,KAAM,CAAAC,WAAW,CAAG,mBAAmB,CAEvC,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,GAAI,CACF,KAAM,CAAAC,GAAG,CAAGC,YAAY,CAACC,OAAO,CAACJ,WAAW,CAAC,CAC7C,GAAI,CAACE,GAAG,CAAE,MAAO,CAAC,CAAC,CACnB,MAAO,CAAAG,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAC,CACxB,CAAE,MAAOK,CAAC,CAAE,CACV,MAAO,CAAC,CAAC,CACX,CACF,CAAC,CAED,KAAM,CAAAC,aAAa,CAAIC,GAAG,EAAK,CAC7B,GAAI,CACFN,YAAY,CAACO,OAAO,CAACV,WAAW,CAAEK,IAAI,CAACM,SAAS,CAACF,GAAG,CAAC,CAAC,CACxD,CAAE,MAAOF,CAAC,CAAE,CAAC,CACf,CAAC,CAED,KAAM,CAAAK,gCAAgC,CAAIC,EAAE,EAAK,CAC/C,KAAM,CAAAC,IAAI,CACRD,EAAE,CAACE,IAAI,GAAK,SAAS,CACjB,KAAK,CACLF,EAAE,CAACE,IAAI,GAAK,UAAU,CACtB,QAAQ,CACR,WAAW,CACjB,KAAM,CAAAC,KAAK,CACTH,EAAE,CAACE,IAAI,GAAK,SAAS,CACjB,eAAe,CACfF,EAAE,CAACE,IAAI,GAAK,UAAU,kBAAAE,MAAA,CACfJ,EAAE,CAACK,UAAU,EACpBL,EAAE,CAACM,WAAW,EAAI,EAAE,CAC1B,KAAM,CAAAC,KAAK,CACTP,EAAE,CAACE,IAAI,GAAK,SAAS,CACjB,qBAAqB,CACrBF,EAAE,CAACE,IAAI,GAAK,UAAU,CACtB,yBAAyB,CACzB,WAAW,CACjB,KAAM,CAAAM,WAAW,CAAAC,aAAA,CAAAA,aAAA,IAAQT,EAAE,MAAEU,SAAS,CAAElC,gBAAgB,CAACwB,EAAE,CAAC,EAAE,CAC9D,KAAM,CAAAW,SAAS,CAAGX,EAAE,CAACE,IAAI,GAAK,SAAS,CAAG,CAAC,CAAG,CAAC,CAAC,CAChD,MAAO,CACLU,EAAE,CAAEC,MAAM,CAACb,EAAE,CAACY,EAAE,CAAC,CACjBL,KAAK,CACLD,WAAW,CAAEE,WAAW,CAACF,WAAW,EAAI,GAAAF,MAAA,CAAGH,IAAI,MAAAG,MAAA,CAAID,KAAK,EAAGW,IAAI,CAAC,CAAC,CACjEC,MAAM,CAAEJ,SAAS,CAAGK,MAAM,CAACR,WAAW,CAACO,MAAM,EAAI,CAAC,CAAC,CACnDE,MAAM,CAAET,WAAW,CAACS,MAAM,CAC1BC,SAAS,CAAEV,WAAW,CAACU,SAAS,CAChCR,SAAS,CAAEF,WAAW,CAACE,SAAS,CAChCrB,GAAG,CAAEmB,WACP,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAAW,oBAAoB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC/C,KAAM,CAACxC,aAAa,CAAE0C,gBAAgB,CAAC,CAAGhD,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACiD,OAAO,CAAEC,UAAU,CAAC,CAAGlD,QAAQ,CAAC,IAAMc,aAAa,CAAC,CAAC,CAAC,CAC7D,KAAM,CAACqC,OAAO,CAAEC,UAAU,CAAC,CAAGpD,QAAQ,CAAC,KAAK,CAAC,CAE7C,KAAM,CAAAqD,kBAAkB,CAAGxD,WAAW,CAAC,SAAY,CACjDuD,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,KAAAE,SAAA,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAtD,GAAG,CAACuD,GAAG,CAAC,2BAA2B,CAAC,CACtD,KAAM,CAAAC,KAAK,CAAG,CAAC,EAAAH,SAAA,CAAAC,GAAG,CAACG,IAAI,UAAAJ,SAAA,iBAARA,SAAA,CAAUK,YAAY,GAAI,EAAE,EAAErC,GAAG,CAC9CG,gCACF,CAAC,CACDuB,gBAAgB,CACdS,KAAK,CAACG,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,GAAI,CAAAC,IAAI,CAACD,CAAC,CAAClB,SAAS,CAAC,CAAG,GAAI,CAAAmB,IAAI,CAACF,CAAC,CAACjB,SAAS,CAAC,CACpE,CAAC,CACD,MAAO,CAAAa,KAAK,CACd,CAAE,MAAOrC,CAAC,CAAE,CACV,MAAO,EAAE,CACX,CAAC,OAAS,CACRgC,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAAE,EAAE,CAAC,CAENtD,SAAS,CAAC,IAAM,CACduD,kBAAkB,CAAC,CAAC,CACtB,CAAC,CAAE,CAACA,kBAAkB,CAAC,CAAC,CAExBvD,SAAS,CAAC,IAAM,CACduB,aAAa,CAAC4B,OAAO,CAAC,CACxB,CAAC,CAAE,CAACA,OAAO,CAAC,CAAC,CAEb,KAAM,CAAAtC,aAAa,CAAGd,WAAW,CAAC,IAAM,CACtC,KAAM,CAAAmE,IAAI,CAAG1D,aAAa,CAAC2D,MAAM,CAAC,CAACC,GAAG,CAAEC,IAAI,GAAK,CAC/CD,GAAG,CAACC,IAAI,CAAC7B,EAAE,CAAC,CAAG,IAAI,CACnB,MAAO,CAAA4B,GAAG,CACZ,CAAC,CAAE,CAAC,CAAC,CAAC,CACNhB,UAAU,CAACc,IAAI,CAAC,CAClB,CAAC,CAAE,CAAC1D,aAAa,CAAC,CAAC,CAEnB,KAAM,CAAAM,UAAU,CAAGf,WAAW,CAAEyC,EAAE,EAAK,CACrCY,UAAU,CAAEkB,IAAI,EAAAjC,aAAA,CAAAA,aAAA,IAAWiC,IAAI,MAAE,CAAC9B,EAAE,EAAG,IAAI,EAAG,CAAC,CACjD,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAA9B,OAAO,CAAGX,WAAW,CAAC,SAAY,CACtC,KAAM,CAAA4D,KAAK,CAAG,KAAM,CAAAJ,kBAAkB,CAAC,CAAC,CACxCL,gBAAgB,CAACS,KAAK,CAAC,CACvB,MAAO,CAAAA,KAAK,CACd,CAAC,CAAE,CAACJ,kBAAkB,CAAC,CAAC,CAExB,KAAM,CAAAgB,KAAK,CAAGtE,OAAO,CAAC,IAAM,CAC1B,KAAM,CAAAQ,WAAW,CAAGD,aAAa,CAAC2D,MAAM,CAAC,CAACK,KAAK,CAAEH,IAAI,GAAK,CACxD,MAAO,CAAAlB,OAAO,CAACkB,IAAI,CAAC7B,EAAE,CAAC,CAAGgC,KAAK,CAAGA,KAAK,CAAG,CAAC,CAC7C,CAAC,CAAE,CAAC,CAAC,CACL,MAAO,CACLhE,aAAa,CACbC,WAAW,CACX4C,OAAO,CACP3C,OAAO,CACPG,aAAa,CACbC,UAAU,CACVqC,OACF,CAAC,CACH,CAAC,CAAE,CAAC3C,aAAa,CAAE2C,OAAO,CAAEzC,OAAO,CAAEG,aAAa,CAAEC,UAAU,CAAEuC,OAAO,CAAC,CAAC,CAEzE,mBACE/C,IAAA,CAACC,mBAAmB,CAACkE,QAAQ,EAACF,KAAK,CAAEA,KAAM,CAAAtB,QAAA,CACxCA,QAAQ,CACmB,CAAC,CAEnC,CAAC,CAED,cAAe,CAAA1C,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}