{"ast":null,"code":"import _objectSpread from\"D:/BMUDHT/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useEffect,useMemo,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const STORAGE_KEY=\"app.preferences\";const defaultPreferences={theme:\"light\",language:\"vi\"};const PreferencesContext=/*#__PURE__*/createContext({theme:\"light\",language:\"vi\",toggleTheme:()=>{},setTheme:()=>{},toggleLanguage:()=>{},setLanguage:()=>{}});const applyThemeClass=theme=>{const body=document.body;body.classList.remove(\"theme-light\",\"theme-dark\");body.classList.add(theme===\"dark\"?\"theme-dark\":\"theme-light\");};export const PreferencesProvider=_ref=>{let{children}=_ref;const[prefs,setPrefs]=useState(()=>{try{const raw=localStorage.getItem(STORAGE_KEY);if(raw){const parsed=JSON.parse(raw);return _objectSpread(_objectSpread({},defaultPreferences),parsed);}}catch(e){/* ignore broken storage */}return defaultPreferences;});useEffect(()=>{applyThemeClass(prefs.theme);},[prefs.theme]);useEffect(()=>{try{localStorage.setItem(STORAGE_KEY,JSON.stringify(prefs));}catch(e){/* ignore quota errors */}},[prefs]);const setTheme=theme=>{setPrefs(current=>_objectSpread(_objectSpread({},current),{},{theme}));};const toggleTheme=()=>{setPrefs(current=>_objectSpread(_objectSpread({},current),{},{theme:current.theme===\"dark\"?\"light\":\"dark\"}));};const setLanguage=language=>{setPrefs(current=>_objectSpread(_objectSpread({},current),{},{language}));};const toggleLanguage=()=>{setPrefs(current=>_objectSpread(_objectSpread({},current),{},{language:current.language===\"vi\"?\"en\":\"vi\"}));};const value=useMemo(()=>({theme:prefs.theme,language:prefs.language,toggleTheme,setTheme,toggleLanguage,setLanguage}),[prefs.theme,prefs.language]);return/*#__PURE__*/_jsx(PreferencesContext.Provider,{value:value,children:children});};export const usePreferences=()=>useContext(PreferencesContext);export default PreferencesContext;","map":{"version":3,"names":["React","createContext","useContext","useEffect","useMemo","useState","jsx","_jsx","STORAGE_KEY","defaultPreferences","theme","language","PreferencesContext","toggleTheme","setTheme","toggleLanguage","setLanguage","applyThemeClass","body","document","classList","remove","add","PreferencesProvider","_ref","children","prefs","setPrefs","raw","localStorage","getItem","parsed","JSON","parse","_objectSpread","e","setItem","stringify","current","value","Provider","usePreferences"],"sources":["D:/BMUDHT/frontend/src/context/PreferencesContext.js"],"sourcesContent":["import React, {\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from \"react\";\r\n\r\nconst STORAGE_KEY = \"app.preferences\";\r\n\r\nconst defaultPreferences = {\r\n  theme: \"light\",\r\n  language: \"vi\",\r\n};\r\n\r\nconst PreferencesContext = createContext({\r\n  theme: \"light\",\r\n  language: \"vi\",\r\n  toggleTheme: () => {},\r\n  setTheme: () => {},\r\n  toggleLanguage: () => {},\r\n  setLanguage: () => {},\r\n});\r\n\r\nconst applyThemeClass = (theme) => {\r\n  const body = document.body;\r\n  body.classList.remove(\"theme-light\", \"theme-dark\");\r\n  body.classList.add(theme === \"dark\" ? \"theme-dark\" : \"theme-light\");\r\n};\r\n\r\nexport const PreferencesProvider = ({ children }) => {\r\n  const [prefs, setPrefs] = useState(() => {\r\n    try {\r\n      const raw = localStorage.getItem(STORAGE_KEY);\r\n      if (raw) {\r\n        const parsed = JSON.parse(raw);\r\n        return { ...defaultPreferences, ...parsed };\r\n      }\r\n    } catch (e) {\r\n      /* ignore broken storage */\r\n    }\r\n    return defaultPreferences;\r\n  });\r\n\r\n  useEffect(() => {\r\n    applyThemeClass(prefs.theme);\r\n  }, [prefs.theme]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(prefs));\r\n    } catch (e) {\r\n      /* ignore quota errors */\r\n    }\r\n  }, [prefs]);\r\n\r\n  const setTheme = (theme) => {\r\n    setPrefs((current) => ({ ...current, theme }));\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    setPrefs((current) => ({\r\n      ...current,\r\n      theme: current.theme === \"dark\" ? \"light\" : \"dark\",\r\n    }));\r\n  };\r\n\r\n  const setLanguage = (language) => {\r\n    setPrefs((current) => ({ ...current, language }));\r\n  };\r\n\r\n  const toggleLanguage = () => {\r\n    setPrefs((current) => ({\r\n      ...current,\r\n      language: current.language === \"vi\" ? \"en\" : \"vi\",\r\n    }));\r\n  };\r\n\r\n  const value = useMemo(\r\n    () => ({\r\n      theme: prefs.theme,\r\n      language: prefs.language,\r\n      toggleTheme,\r\n      setTheme,\r\n      toggleLanguage,\r\n      setLanguage,\r\n    }),\r\n    [prefs.theme, prefs.language]\r\n  );\r\n\r\n  return (\r\n    <PreferencesContext.Provider value={value}>\r\n      {children}\r\n    </PreferencesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const usePreferences = () => useContext(PreferencesContext);\r\n\r\nexport default PreferencesContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}