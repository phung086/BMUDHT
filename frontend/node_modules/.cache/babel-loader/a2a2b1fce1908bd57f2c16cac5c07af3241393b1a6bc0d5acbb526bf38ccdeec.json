{"ast":null,"code":"var _jsxFileName = \"D:\\\\BMUDHT\\\\frontend\\\\src\\\\components\\\\AdminLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport api from \"../services/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminLogin = ({\n  onLoginSuccess\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [mfaRequired, setMfaRequired] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [error, setError] = useState(\"\");\n  const handleLogin = async () => {\n    setError(\"\");\n    try {\n      const res = await api.post(\"/api/auth/login\", {\n        email,\n        password\n      });\n      if (res.data.mfaRequired) {\n        setMfaRequired(true);\n        setUserId(res.data.userId);\n      } else {\n        onLoginSuccess(res.data.accessToken, res.data.refreshToken);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Login failed\");\n    }\n  };\n  const handleMfaVerify = async () => {\n    setError(\"\");\n    try {\n      const res = await api.post(\"/api/auth/login/mfa\", {\n        userId,\n        otp\n      });\n      onLoginSuccess(res.data.accessToken, res.data.refreshToken);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || \"OTP verification failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0110\\u0103ng nh\\u1EADp Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), !mfaRequired ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"M\\u1EADt kh\\u1EA9u\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"\\u0110\\u0103ng nh\\u1EADp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nh\\u1EADp m\\xE3 OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMfaVerify,\n        children: \"X\\xE1c th\\u1EF1c OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminLogin, \"LEZTnE8l390AFP8PmpZ7u1Ft27o=\");\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["React","useState","api","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminLogin","onLoginSuccess","_s","email","setEmail","password","setPassword","otp","setOtp","mfaRequired","setMfaRequired","userId","setUserId","error","setError","handleLogin","res","post","data","accessToken","refreshToken","err","_err$response","_err$response$data","response","handleMfaVerify","_err$response2","_err$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/BMUDHT/frontend/src/components/AdminLogin.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport api from \"../services/api\";\r\n\r\nconst AdminLogin = ({ onLoginSuccess }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [mfaRequired, setMfaRequired] = useState(false);\r\n  const [userId, setUserId] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleLogin = async () => {\r\n    setError(\"\");\r\n    try {\r\n      const res = await api.post(\"/api/auth/login\", { email, password });\r\n\r\n      if (res.data.mfaRequired) {\r\n        setMfaRequired(true);\r\n        setUserId(res.data.userId);\r\n      } else {\r\n        onLoginSuccess(res.data.accessToken, res.data.refreshToken);\r\n      }\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || \"Login failed\");\r\n    }\r\n  };\r\n\r\n  const handleMfaVerify = async () => {\r\n    setError(\"\");\r\n    try {\r\n      const res = await api.post(\"/api/auth/login/mfa\", { userId, otp });\r\n\r\n      onLoginSuccess(res.data.accessToken, res.data.refreshToken);\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || \"OTP verification failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-login\">\r\n      <h2>Đăng nhập Admin</h2>\r\n      {!mfaRequired ? (\r\n        <>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Mật khẩu\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <button onClick={handleLogin}>Đăng nhập</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Nhập mã OTP\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n          />\r\n          <button onClick={handleMfaVerify}>Xác thực OTP</button>\r\n        </>\r\n      )}\r\n      {error && <p className=\"error\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}