{"ast":null,"code":"var _jsxFileName = \"D:\\\\BMUDHT\\\\frontend\\\\src\\\\context\\\\PreferencesContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STORAGE_KEY = \"app.preferences\";\nconst defaultPreferences = {\n  theme: \"light\",\n  language: \"vi\"\n};\nconst PreferencesContext = /*#__PURE__*/createContext({\n  theme: \"light\",\n  language: \"vi\",\n  toggleTheme: () => {},\n  setTheme: () => {},\n  toggleLanguage: () => {},\n  setLanguage: () => {}\n});\nconst applyThemeClass = theme => {\n  const body = document.body;\n  body.classList.remove(\"theme-light\", \"theme-dark\");\n  body.classList.add(theme === \"dark\" ? \"theme-dark\" : \"theme-light\");\n};\nexport const PreferencesProvider = ({\n  children\n}) => {\n  _s();\n  const [prefs, setPrefs] = useState(() => {\n    try {\n      const raw = localStorage.getItem(STORAGE_KEY);\n      if (raw) {\n        const parsed = JSON.parse(raw);\n        return {\n          ...defaultPreferences,\n          ...parsed\n        };\n      }\n    } catch (e) {\n      /* ignore broken storage */\n    }\n    return defaultPreferences;\n  });\n  useEffect(() => {\n    applyThemeClass(prefs.theme);\n  }, [prefs.theme]);\n  useEffect(() => {\n    try {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(prefs));\n    } catch (e) {\n      /* ignore quota errors */\n    }\n  }, [prefs]);\n  const setTheme = theme => {\n    setPrefs(current => ({\n      ...current,\n      theme\n    }));\n  };\n  const toggleTheme = () => {\n    setPrefs(current => ({\n      ...current,\n      theme: current.theme === \"dark\" ? \"light\" : \"dark\"\n    }));\n  };\n  const setLanguage = language => {\n    setPrefs(current => ({\n      ...current,\n      language\n    }));\n  };\n  const toggleLanguage = () => {\n    setPrefs(current => ({\n      ...current,\n      language: current.language === \"vi\" ? \"en\" : \"vi\"\n    }));\n  };\n  const value = useMemo(() => ({\n    theme: prefs.theme,\n    language: prefs.language,\n    toggleTheme,\n    setTheme,\n    toggleLanguage,\n    setLanguage\n  }), [prefs.theme, prefs.language]);\n  return /*#__PURE__*/_jsxDEV(PreferencesContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(PreferencesProvider, \"pNCl/8+88lW5Va6HKYOdigzQJ3g=\");\n_c = PreferencesProvider;\nexport const usePreferences = () => {\n  _s2();\n  return useContext(PreferencesContext);\n};\n_s2(usePreferences, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default PreferencesContext;\nvar _c;\n$RefreshReg$(_c, \"PreferencesProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useMemo","useState","jsxDEV","_jsxDEV","STORAGE_KEY","defaultPreferences","theme","language","PreferencesContext","toggleTheme","setTheme","toggleLanguage","setLanguage","applyThemeClass","body","document","classList","remove","add","PreferencesProvider","children","_s","prefs","setPrefs","raw","localStorage","getItem","parsed","JSON","parse","e","setItem","stringify","current","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePreferences","_s2","$RefreshReg$"],"sources":["D:/BMUDHT/frontend/src/context/PreferencesContext.js"],"sourcesContent":["import React, {\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from \"react\";\r\n\r\nconst STORAGE_KEY = \"app.preferences\";\r\n\r\nconst defaultPreferences = {\r\n  theme: \"light\",\r\n  language: \"vi\",\r\n};\r\n\r\nconst PreferencesContext = createContext({\r\n  theme: \"light\",\r\n  language: \"vi\",\r\n  toggleTheme: () => {},\r\n  setTheme: () => {},\r\n  toggleLanguage: () => {},\r\n  setLanguage: () => {},\r\n});\r\n\r\nconst applyThemeClass = (theme) => {\r\n  const body = document.body;\r\n  body.classList.remove(\"theme-light\", \"theme-dark\");\r\n  body.classList.add(theme === \"dark\" ? \"theme-dark\" : \"theme-light\");\r\n};\r\n\r\nexport const PreferencesProvider = ({ children }) => {\r\n  const [prefs, setPrefs] = useState(() => {\r\n    try {\r\n      const raw = localStorage.getItem(STORAGE_KEY);\r\n      if (raw) {\r\n        const parsed = JSON.parse(raw);\r\n        return { ...defaultPreferences, ...parsed };\r\n      }\r\n    } catch (e) {\r\n      /* ignore broken storage */\r\n    }\r\n    return defaultPreferences;\r\n  });\r\n\r\n  useEffect(() => {\r\n    applyThemeClass(prefs.theme);\r\n  }, [prefs.theme]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(prefs));\r\n    } catch (e) {\r\n      /* ignore quota errors */\r\n    }\r\n  }, [prefs]);\r\n\r\n  const setTheme = (theme) => {\r\n    setPrefs((current) => ({ ...current, theme }));\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    setPrefs((current) => ({\r\n      ...current,\r\n      theme: current.theme === \"dark\" ? \"light\" : \"dark\",\r\n    }));\r\n  };\r\n\r\n  const setLanguage = (language) => {\r\n    setPrefs((current) => ({ ...current, language }));\r\n  };\r\n\r\n  const toggleLanguage = () => {\r\n    setPrefs((current) => ({\r\n      ...current,\r\n      language: current.language === \"vi\" ? \"en\" : \"vi\",\r\n    }));\r\n  };\r\n\r\n  const value = useMemo(\r\n    () => ({\r\n      theme: prefs.theme,\r\n      language: prefs.language,\r\n      toggleTheme,\r\n      setTheme,\r\n      toggleLanguage,\r\n      setLanguage,\r\n    }),\r\n    [prefs.theme, prefs.language]\r\n  );\r\n\r\n  return (\r\n    <PreferencesContext.Provider value={value}>\r\n      {children}\r\n    </PreferencesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const usePreferences = () => useContext(PreferencesContext);\r\n\r\nexport default PreferencesContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}