{"ast":null,"code":"import React,{useState}from\"react\";import api from\"../services/api\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MfaSetup=()=>{const[qr,setQr]=useState(null);const[secret,setSecret]=useState(null);const[token,setToken]=useState(\"\");const[message,setMessage]=useState(null);const startSetup=async()=>{const res=await api.post(\"/api/auth/mfa/setup\",{});setQr(res.data.qr);setSecret(res.data.secret);};const verify=async()=>{try{const res=await api.post(\"/api/auth/mfa/verify\",{token});setMessage(res.data.message||\"MFA enabled\");}catch(err){var _err$response,_err$response$data;setMessage(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||\"Failed to verify\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"card p-3\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Thi\\u1EBFt l\\u1EADp MFA (TOTP)\"}),!qr&&/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-sm btn-outline-primary\",onClick:startSetup,children:\"B\\u1EAFt \\u0111\\u1EA7u\"}),qr&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Qu\\xE9t m\\xE3 QR b\\xEAn d\\u01B0\\u1EDBi b\\u1EB1ng \\u1EE9ng d\\u1EE5ng Authenticator:\"}),/*#__PURE__*/_jsx(\"img\",{src:qr,alt:\"qr\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Secret: \",/*#__PURE__*/_jsx(\"code\",{children:secret})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group mt-2\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",value:token,onChange:e=>setToken(e.target.value),placeholder:\"Nh\\u1EADp m\\xE3 t\\u1EEB app\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:verify,children:\"X\\xE1c minh\"})]}),message&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 alert alert-info\",children:message})]})]});};export default MfaSetup;","map":{"version":3,"names":["React","useState","api","jsx","_jsx","jsxs","_jsxs","MfaSetup","qr","setQr","secret","setSecret","token","setToken","message","setMessage","startSetup","res","post","data","verify","err","_err$response","_err$response$data","response","error","className","children","onClick","src","alt","value","onChange","e","target","placeholder"],"sources":["D:/BMUDHT/frontend/src/components/MfaSetup.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport api from \"../services/api\";\r\n\r\nconst MfaSetup = () => {\r\n  const [qr, setQr] = useState(null);\r\n  const [secret, setSecret] = useState(null);\r\n  const [token, setToken] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const startSetup = async () => {\r\n    const res = await api.post(\"/api/auth/mfa/setup\", {});\r\n    setQr(res.data.qr);\r\n    setSecret(res.data.secret);\r\n  };\r\n\r\n  const verify = async () => {\r\n    try {\r\n      const res = await api.post(\"/api/auth/mfa/verify\", { token });\r\n      setMessage(res.data.message || \"MFA enabled\");\r\n    } catch (err) {\r\n      setMessage(err.response?.data?.error || \"Failed to verify\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card p-3\">\r\n      <h5>Thiết lập MFA (TOTP)</h5>\r\n      {!qr && (\r\n        <button className=\"btn btn-sm btn-outline-primary\" onClick={startSetup}>\r\n          Bắt đầu\r\n        </button>\r\n      )}\r\n      {qr && (\r\n        <div>\r\n          <p>Quét mã QR bên dưới bằng ứng dụng Authenticator:</p>\r\n          <img src={qr} alt=\"qr\" />\r\n          <p>\r\n            Secret: <code>{secret}</code>\r\n          </p>\r\n          <div className=\"input-group mt-2\">\r\n            <input\r\n              className=\"form-control\"\r\n              value={token}\r\n              onChange={(e) => setToken(e.target.value)}\r\n              placeholder=\"Nhập mã từ app\"\r\n            />\r\n            <button className=\"btn btn-primary\" onClick={verify}>\r\n              Xác minh\r\n            </button>\r\n          </div>\r\n          {message && <div className=\"mt-2 alert alert-info\">{message}</div>}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MfaSetup;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,EAAE,CAAEC,KAAK,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CAClC,KAAM,CAACS,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAC1C,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAE5C,KAAM,CAAAe,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAf,GAAG,CAACgB,IAAI,CAAC,qBAAqB,CAAE,CAAC,CAAC,CAAC,CACrDT,KAAK,CAACQ,GAAG,CAACE,IAAI,CAACX,EAAE,CAAC,CAClBG,SAAS,CAACM,GAAG,CAACE,IAAI,CAACT,MAAM,CAAC,CAC5B,CAAC,CAED,KAAM,CAAAU,MAAM,CAAG,KAAAA,CAAA,GAAY,CACzB,GAAI,CACF,KAAM,CAAAH,GAAG,CAAG,KAAM,CAAAf,GAAG,CAACgB,IAAI,CAAC,sBAAsB,CAAE,CAAEN,KAAM,CAAC,CAAC,CAC7DG,UAAU,CAACE,GAAG,CAACE,IAAI,CAACL,OAAO,EAAI,aAAa,CAAC,CAC/C,CAAE,MAAOO,GAAG,CAAE,KAAAC,aAAA,CAAAC,kBAAA,CACZR,UAAU,CAAC,EAAAO,aAAA,CAAAD,GAAG,CAACG,QAAQ,UAAAF,aAAA,kBAAAC,kBAAA,CAAZD,aAAA,CAAcH,IAAI,UAAAI,kBAAA,iBAAlBA,kBAAA,CAAoBE,KAAK,GAAI,kBAAkB,CAAC,CAC7D,CACF,CAAC,CAED,mBACEnB,KAAA,QAAKoB,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBvB,IAAA,OAAAuB,QAAA,CAAI,gCAAoB,CAAI,CAAC,CAC5B,CAACnB,EAAE,eACFJ,IAAA,WAAQsB,SAAS,CAAC,gCAAgC,CAACE,OAAO,CAAEZ,UAAW,CAAAW,QAAA,CAAC,wBAExE,CAAQ,CACT,CACAnB,EAAE,eACDF,KAAA,QAAAqB,QAAA,eACEvB,IAAA,MAAAuB,QAAA,CAAG,oFAAgD,CAAG,CAAC,cACvDvB,IAAA,QAAKyB,GAAG,CAAErB,EAAG,CAACsB,GAAG,CAAC,IAAI,CAAE,CAAC,cACzBxB,KAAA,MAAAqB,QAAA,EAAG,UACO,cAAAvB,IAAA,SAAAuB,QAAA,CAAOjB,MAAM,CAAO,CAAC,EAC5B,CAAC,cACJJ,KAAA,QAAKoB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BvB,IAAA,UACEsB,SAAS,CAAC,cAAc,CACxBK,KAAK,CAAEnB,KAAM,CACboB,QAAQ,CAAGC,CAAC,EAAKpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC1CI,WAAW,CAAC,6BAAgB,CAC7B,CAAC,cACF/B,IAAA,WAAQsB,SAAS,CAAC,iBAAiB,CAACE,OAAO,CAAER,MAAO,CAAAO,QAAA,CAAC,aAErD,CAAQ,CAAC,EACN,CAAC,CACLb,OAAO,eAAIV,IAAA,QAAKsB,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAEb,OAAO,CAAM,CAAC,EAC/D,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAP,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}